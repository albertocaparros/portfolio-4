---
import "../../styles/post.css";
import Layout from "../../layouts/Layout.astro";
import Separator from "../../components/Separator.astro";
import PostCard from "../../components/PostCard.astro";
import BlogHeader from "../../components/BlogHeader.astro";
import BlogNavMenu from "../../components/BlogNavMenu.astro";

import { getCollection } from "astro:content";

const posts = await getCollection("blog");

const postsByLatest = posts.sort((a, b) => {
  return (
    new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
  );
});
---

<Layout>
  <BlogHeader />
  <BlogNavMenu />
  <main
    class="flex flex-col justify-start max-w-5xl mx-auto p-4 w-full h-full py-10 lg:pt-36"
  >
    <article class="dark:prose-invert prose-lg lg:prose-xl">
      <h1 class="text-sky-700 dark:text-orange-500 text-center">
        Why-first Frontend
      </h1>
      <img
        src="https://images.unsplash.com/photo-1507721999472-8ed4421c4af2?q=80&h=250"
        class="justify-self-center"
      />
      <p>
        Welcome! This blog is now dedicated to exploring <strong>why</strong> certain
        solutions, techniques, and frameworks were created in the world of frontend
        development. Instead of just showing <em>how</em> to use them, I'll dive
        deeper into the <em>problems</em> and <em>constraints</em> that prompted
        their invention. If you’ve ever wondered why React introduced Hooks, or why
        Vite emerged despite Webpack dominating the scene, you’re in the right place.
      </p>
      <p>
        Think of it as a guided journey—from the broad question of “Why do we
        even need frontend development?” down to the specifics of “Why do custom
        hooks exist in React?” or “Why minify code at all?” This shift in
        perspective will not only help you pass interviews; it will also sharpen
        your problem-solving skills in real-world projects.
      </p>
      <Separator noPadding={true} />
      <h2>Recent posts</h2>

      {
        postsByLatest.map((post) => (
          <PostCard
            url={`./${post.slug}`}
            title={post.data.title}
            img={post.data.image}
            description={post.data.description}
            datetime={post.data.pubDate}
          />
        ))
      }
    </article>
  </main>
</Layout>
